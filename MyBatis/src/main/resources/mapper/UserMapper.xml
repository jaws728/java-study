<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
    namespace: 名称空间
-->
<mapper namespace="mapper.UserMapper">
    <!--  statement  -->
    <!-- 若使用别名typealiases已经导入包名，则只需要写上对象名即可-->
    <!-- <select id="selectAll" resultType="pojo.User">-->
    <select id="selectAll" resultType="user">
        select * from tb_user;
    </select>

    <!--
        数据库表的字段名称 与 实体类的属性名称 不一样 ： 则不能自动封装数据
            1. 起别名：对不一样的列名起别名 -> as
            2. resultMap：自动映射
                - 定义<resultMap>标签
                - 在<select>标签中 使用resultMap属性替换 resultType属性
    -->
    <!--  <select id="selectById" resultType="user">  -->
    <!--      select * from tb_user where id = #{id};  -->
    <!--  </select>  -->

    <!--  方式1：起别名  -->
    <!--  sql片段  -->
    <!--
    <sql id="user_column">
        id, username, password as pwd, gender, addr
    </sql>
    <select id="selectById" resultType="user">
        select
            <include refid="user_column"/>
        from tb_user where id = #{id};
    </select>
    -->

    <!--  方式2：resultMap  -->
    <!--
        id：唯一表示
        type：映射类型，支持别名
    -->
    <resultMap id="UserResultMap" type="user">
        <!--
            id：完成主键字段的映射
                column：表的列名
                property：实体类的属性名
            result：完成一般字段的映射
                column：表的列名
                property：实体类的属性名
        -->
        <result column="password" property="pwd"></result>
    </resultMap>
    <select id="selectById" parameterType="int" resultMap="UserResultMap">
        -- id参数名与对应方法的形参保持一致即可: parameterType用于固定参数类型 - 可省略
        -- 参数站位符：
        -- 1. #{}：会将其替换为？防止SQL注入 --> 传递参数时使用
        -- 2. ${}：拼接，存在SQL注入问题 --> 表名或列名不固定的情况下使用
        select *
        from tb_user
        where id <![CDATA[
            <
        ]]> #{id};
        -- 处理特殊字符：（如小于号）
        -- 1. 转译字符：&lt;
        -- 2. CDATA区：如上
    </select>

    <!--  条件查询  -->
    <select id="selectByCondition" resultMap="UserResultMap">
        -- 动态条件查询：--> 动态SQL
        --  if -->可能遇到没有参数的问题，因此需要用<where></where>标签
        --  choose(when, otherwise) = switch case default --> 全为标签
        --  trim(when, seq)
        --  foreach
        select *
        from tb_user
        <where>
            <if test="status != null and status != ''">
                status = #{status}
            </if>
            and addr like #{addr}
        </where>
        -- like: 用于不确定但包括某类一样的数据
    </select>

</mapper>
